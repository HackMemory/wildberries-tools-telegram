from .consts import InlineConstructor
from typing import List
from .callbacks import *

class InlineMenu(InlineConstructor):

    @staticmethod
    def back_menu_button():
        schema = [1]
        btns = [
            {'text': '‚óÄÔ∏è–í –º–µ–Ω—é', "cb": menu_cd.new(action="main-menu-open", data="void") }
        ]
        return InlineMenu._create_kb(btns, schema)

    @staticmethod
    def start_menu():
        schema = [1]
        btns = [
            {'text': 'üéõÔ∏è–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é', "cb": menu_cd.new(action="main-menu-open", data="void") }
        ]
        return InlineMenu._create_kb(btns, schema)

    @staticmethod
    def main_menu(has_token: bool):
        btns = []
        schema = [1, 1]

        if has_token: 
            btns.append({'text': '‚ùå–£–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω', "cb": menu_cd.new(action="main-menu-remove-token", data="void") })
            btns.append({'text': 'üìñ–ú–æ–∏ —Ç–æ–≤–∞—Ä—ã', "cb": menu_cd.new(action="main-menu-items", data="void")})
            schema.append(1)
            schema.append(1)
        else:
            btns.append({'text': '‚ûï–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω', "cb": menu_cd.new(action="main-menu-add-token", data="void") })
            schema.append(1)

        btns.append({'text': 'üë§–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', "cb": menu_cd.new(action="main-menu-profile", data="void")})
        btns.append({'text': 'üí≥–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', "cb": menu_cd.new(action="main-menu-balance", data="void")})

        return InlineMenu._create_kb(btns, schema)

    @staticmethod
    def items_list(items: List, total_count, page = 0, per_page = 10):
        schema = []
        btns = []

        has_next_page = (total_count//per_page) + 1 > int(page) + 1

        for i in range(0, len(items)):     
            btns.append({"text": items[i]["value"], 'cb': item_cd.new(action="select-item", data=items[i]["id"], page=page)})
            schema.append(1)

        page_schema = 0
        if page != 0:
            btns.append({"text": '‚¨ÖÔ∏è', 'cb': menu_cd.new(action="page", data=page-1)})
            page_schema += 1

        if has_next_page:
            btns.append({"text": '‚û°Ô∏è', 'cb': menu_cd.new(action="page", data=page+1)})
            page_schema += 1

        btns.append({"text": '‚óÄÔ∏è–í –º–µ–Ω—é', 'cb': menu_cd.new(action="main-menu-back", data="void")})
        schema.append(page_schema)
        schema.append(1)

        return InlineMenu._create_kb(btns, schema)

    @staticmethod
    def token_confirm():
        schema = [2]
        btns = [
            {'text': '‚úÖ–î–∞', "cb": menu_cd.new(action="token-yes", data="void") },
            {'text': '‚ùå–ù–µ—Ç', "cb": menu_cd.new(action="main-menu-back", data="void") },
        ]
        return InlineMenu._create_kb(btns, schema)


    @staticmethod
    def before_item_choose():
        schema = [1, 1, 1]
        btns = [
            {'text': '–í—ã–±—Ä–∞—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞', "cb": menu_cd.new(action="menu-items-choose", data="void") },
            {'text': '–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é –Ω–æ–º–µ—Ä –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã', "cb": menu_cd.new(action="menu-item-custom", data="void") },
            {'text': '‚óÄÔ∏è–í –º–µ–Ω—é', "cb": menu_cd.new(action="main-menu-open", data="void") }
        ]
        return InlineMenu._create_kb(btns, schema)


    @staticmethod
    def item_menu(page = 0):
        schema = [1, 1]
        btns = [
            {'text': '–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', "cb": menu_cd.new(action="item-change-name", data="void") },
            {'text': '‚óÄÔ∏è–ù–∞–∑–∞–¥', "cb": menu_cd.new(action="page", data=page) }
        ]
        return InlineMenu._create_kb(btns, schema)

    @staticmethod
    def item_menu_custom():
        schema = [1, 1]
        btns = [
            {'text': '–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', "cb": menu_cd.new(action="item-change-name", data="void") },
            {'text': '‚óÄÔ∏è–í –º–µ–Ω—é', "cb": menu_cd.new(action="main-menu-open", data="void") }
        ]
        return InlineMenu._create_kb(btns, schema)